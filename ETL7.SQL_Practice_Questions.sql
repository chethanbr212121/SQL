----1. TABLE LOCATION.

CREATE TABLE LOCATION
(location_id INT, 
regional_group VARCHAR(25));

INSERT ALL
INTO LOCATION VALUES(122,'NEW YORK')
INTO LOCATION VALUES(123,'DALLAS')
INTO LOCATION VALUES(124,'CHICAGO')
INTO LOCATION VALUES(167,'BOSTON')
SELECT * FROM dual;

SELECT * FROM LOCATION;


---- 2. TABLE DEPARTMENT.

CREATE TABLE department
(department_id INT, 
NAME VARCHAR(30), 
location_id INT);

INSERT ALL
INTO department VALUES(10,'ACCOUNTING',122)
INTO department VALUES(20,'RESEARCH',124)
INTO department VALUES(30,'SALES',123)
INTO department VALUES(40,'OPERATIONS',167)
SELECT * FROM dual;

SELECT * FROM department;


----3. TABLE JOB.
CREATE TABLE JOB
(job_id INT, 
designation VARCHAR(30));

INSERT ALL
INTO JOB VALUES(667,'CLERK')
INTO JOB VALUES(668,'STAFF')
INTO JOB VALUES(669,'ANALYST')
INTO JOB VALUES(670,'SALESPERSON')
INTO JOB VALUES(671,'MANAGER')
INTO JOB VALUES(672,'PRESIDENT')
SELECT * FROM dual;

SELECT * FROM JOB;


----4. TABLE 
CREATE TABLE employee_job
(emp_id INT, 
last_name VARCHAR(20), 
first_name VARCHAR(20),
midle_name VARCHAR(20), 
job_id INT,
manager_id INT,
hiredate DATE, 
salarry INT, 
comm INT, 
department_id INT);

INSERT INTO employee_job VALUES(7369,'SMITH','JOHN','Q',667,7902,‘17-DEC-1984’,800,NULL,20);
INSERT INTO employee_job VALUES(7499,'ALLEN','KEVIN','J',670,7698, '20-Feb-1985',1600,300,30);
INSERT INTO employee_job VALUES(7505,'DOYLE','JEAN','K',671,7839, '04-Apr-1985',2850,NULL,30);
INSERT INTO employee_job VALUES(7506,'DENNIS','LYNN','S',671,7839, '15-May-1985',2750,NULL,30);
INSERT INTO employee_job VALUES(7507,'BAKER','LESLIE','D',671,7839, '10-June-1985',2200,NULL,40);
INSERT INTO employee_job VALUES(7521,'WARK','CYNTHIA','D',670,7698, '22-Feb-1985',1250,500,30);
INSERT INTO employee_job VALUES(7369,'SMITH','JOHN','Q',667,7902, '17-Dec-1984',800,NULL,20);
INSERT INTO employee_job VALUES(7372,'SMITH','JOHN','Q',667,7902, '11-Apr-2011',800,NULL,20);

SELECT * FROM employee_job;

---1.List all the employee details.
SELECT * FROM employee_job;

---2.List all the department details .
SELECT * FROM department;

---3.List all job details .
SELECT * FROM JOB;

---4.List all the locations .
SELECT * FROM LOCATION;

---5.List out first name, last name, salary, commission for all employees .
SELECT first_name,last_name,salary,commission FROM employee_job;

---6.	List out employee_id, last name, department id for all employees and rename employee id as "ID of the employee", last name as "Name of the employee", department id as "department ID" .
SELECT emp_id "id of employee",last_name "name of employee", department_id "department id" FROM employee_job;

---7.	List out the employees annual salary with their names only. 
SELECT first_name, (salary*12) AS annual_salary FROM employee_job;

---8.List the details about "SMITH" 
SELECT * FROM employee_job
WHERE last_name LIKE '%SMITH';

---9.List out the employees who are working in department 20.
SELECT * FROM employee_job
WHERE department_id = 20;

---10.List out the employees who are earning salary between 3000 and 4500 .
SELECT * FROM employee_job
WHERE salary BETWEEN 3000 AND 4500;

SELECT * FROM employee_job
WHERE salary >= 3000 AND salary<=4500;

---11.LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 OR 20.

SELECT * FROM EMPLOYEE_JOB
WHERE department_id IN (30,20);


---12.FIND out THE EMPLOYEES WHO are not WORKING in DEPARTMENT 10 or 30.
SELECT * FROM EMPLOYEE_JOB
WHERE department_id NOT IN (30,20);

---13.LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH “S”.
SELECT * FROM EMPLOYEE_JOB
WHERE LAST_NAME LIKE 'S%';

---14.LIST OUT THE EMPLOYEES WHOSE NAME START WITH “S” AND END WITH “H”.
SELECT * FROM EMPLOYEE_JOB
WHERE LAST_NAME LIKE 'S%H';

---15.LIST OUT THE EMPLOYEES WHOSE NAME LENGTH IS 5 AND START WITH “S”.
SELECT * FROM EMPLOYEE_JOB
WHERE LAST_NAME LIKE 'S____';

---16.LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 30 AND DRAW THE SALARIES MORE THAN 2500.
SELECT * FROM EMPLOYEE_JOB
WHERE department_id=30 AND SALARY>2500;

---17.LIST OUT THE EMPLOYEES WHO ARE NOT RECEIVING COMMISSION.
SELECT * FROM EMPLOYEE_JOB
WHERE commission IS NULL;

---18.LIST OUT THE EMPLOYEE ID, LAST NAME IN ASCENDING ORDER BASED ON THE EMPLOYEE ID.
SELECT EMP_ID, LAST_NAME FROM EMPLOYEE_JOB
ORDER BY EMP_ID ASC;

---19.LIST OUT THE EMPLOYEE ID, LAST NAME,SALARY IN DESCENDING ORDER BASED ON SALARY COLUMN.
SELECT EMP_ID, LAST_NAME,SALARY FROM EMPLOYEE_JOB
ORDER BY SALARY DESC;

---20.LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST_NAME IN ASCENDING ORDER AND SALARIES IN DESCENDING ORDER.
SELECT * FROM EMPLOYEE_JOB
ORDER BY LAST_NAME ASC, SALARY DESC;

---21.LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST_NAME IN ASCENDING ORDER AND THEN ON DEPARTMENT_ID IN DESCENDING ORDER.
SELECT * FROM EMPLOYEE_JOB
ORDER BY LAST_NAME ASC, DEPARTMENT_ID DESC;

---22.HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS WISE IN THE ORGANIZATION.
SELECT DEPARTMENT_ID,COUNT(*) FROM EMPLOYEE_JOB
GROUP BY DEPARTMENT_ID;

---23.LIST OUT THE DEPARTMENT WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARY OF THE EMPLOYEES.
SELECT DEPARTMENT_ID,MAX(SALARY),MIN(SALARY), AVG(SALARY) FROM EMPLOYEE_JOB
GROUP BY DEPARTMENT_ID;

---24.LIST OUT THE JOB WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARIES OF THE EMPLOYEES.
SELECT JOB_ID,MAX(SALARY),MIN(SALARY), AVG(SALARY) FROM EMPLOYEE_JOB
GROUP BY JOB_ID;

---25.LIST OUT the NO.OF employees joined IN EVERY MONTH IN ascending ORDER.
SELECT TO_CHAR(HIREDATE,'MONTH'), COUNT(TO_CHAR(HIREDATE,'MONTH')) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'MONTH')
ORDER BY TO_CHAR(HIREDATE,'MONTH') ASC;

---26.LIST OUT THE NO.OF EMPLOYEES FOR EACH MONTH AND YEAR, IN THE ASCENDING ORDER BASED ON THE YEAR, MONTH.
SELECT TO_CHAR(HIREDATE,'MONTH'),TO_CHAR(HIREDATE,'YYYY'), COUNT(TO_CHAR(HIREDATE,'MONTH')) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'MONTH'),TO_CHAR(HIREDATE,'YYYY')
ORDER BY TO_CHAR(HIREDATE,'YYYY') ASC,TO_CHAR(HIREDATE,'MONTH') ASC;

---27.LIST OUT THE DEPARTMENT ID HAVING ATLEAST FOUR EMPLOYEES.
SELECT DEPARTMENT_ID,COUNT(*) FROM EMPLOYEE_JOB
GROUP BY DEPARTMENT_ID
HAVING COUNT(*)=4;

---28.HOW MANY EMPLOYEES IN APRIL MONTH.
SELECT TO_CHAR(HIREDATE,'MONTH'),COUNT(*) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'MONTH')
HAVING TO_CHAR(HIREDATE,'MONTH') LIKE '%APRIL%';


---29.HOW MANY EMPLOYEES WHO ARE JOINED IN JUNE OR MAY MONTH.
SELECT TO_CHAR(HIREDATE,'MONTH'),COUNT(*) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'MONTH')
HAVING TO_CHAR(HIREDATE,'MONTH') LIKE '%JUNE%' OR TO_CHAR(HIREDATE,'MONTH') LIKE '%MAY%';

---30.HOW MANY EMPLOYEES WHO ARE JOINED IN 1985.
SELECT TO_CHAR(HIREDATE,'YYYY'),COUNT(*) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'YYYY')
HAVING TO_CHAR(HIREDATE,'YYYY') = 1985;

---31.HOW MANY EMPLOYEES JOINED EACH MONTH IN 1985.
SELECT TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH'),COUNT(*) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH')
HAVING TO_CHAR(HIREDATE,'YYYY') = 1985;

---32.HOW MANY EMPLOYEES WHO ARE JOINED IN FEBRUARY 1985.
SELECT TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH'),COUNT(*) FROM EMPLOYEE_JOB
GROUP BY TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH')
HAVING TO_CHAR(HIREDATE,'YYYY') = 1985 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%FEBRUARY%' ;

---33.WHICH IS THE DEPARTMENT ID, HAVING GREATER THAN OR EQUAL TO 3 EMPLOYEES JOINED IN FEBURARY 1985.
SELECT TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH'),DEPARTMENT_ID,COUNT(*) FROM EMPLOYEE_JOB
WHERE DEPARTMENT_ID >= 3
GROUP BY TO_CHAR(HIREDATE,'YYYY'),TO_CHAR(HIREDATE,'MONTH'),DEPARTMENT_ID
HAVING TO_CHAR(HIREDATE,'YYYY') = 1985 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%FEBRUARY%' ;


---34.DISPLAY THE EMPLOYEE WHO GOT THE MAXIMUM SALARY.
SELECT MAX(SALARY) FROM EMPLOYEE_JOB;

---35.DISPLAY THE EMPLOYEES WHO ARE WORKING IN SALESPERSON DEPARTMENT.
SELECT E.*,J.DESIGNATION FROM EMPLOYEE_JOB E
INNER JOIN JOB J
ON J.JOB_ID=E.JOB_ID
WHERE J.DESIGNATION = 'SALESPERSON';

---36.DISPLAY THE EMPLOYEES WHO ARE WORKING AS “CLERK”.
SELECT E.*,J.DESIGNATION 
FROM EMPLOYEE_JOB E
INNER JOIN JOB J
ON J.JOB_ID=E.JOB_ID
WHERE J.DESIGNATION = 'CLERK';


---37.DISPLAY THE EMPLOYEES WHO ARE WORKING IN “BOSTON”.
SELECT E.*,D.LOCATION_ID,L.REGIONAL_GROUP
FROM DEPARTMENT D
INNER JOIN EMPLOYEE_JOB E
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
INNER JOIN LOCATION L
ON L.LOCATION_ID=D.LOCATION_ID
WHERE L.REGIONAL_GROUP = 'BOSTON';

--OR
SELECT * FROM EMPLOYEE_JOB WHERE DEPARTMENT_ID IN (
     SELECT DEPARTMENT_ID FROM department WHERE LOCATION_ID IN(
            SELECT LOCATION_ID FROM LOCATION WHERE REGIONAL_GROUP = 'BOSTON'));
            
---38.FIND OUT NO.OF EMPLOYEES WORKING IN “SALES” DEPARTMENT.
SELECT * FROM EMPLOYEE_JOB
WHERE JOB_ID IN (
            SELECT JOB_ID FROM JOB
            WHERE DESIGNATION ='SALESPERSON');
---OR

SELECT E.*,J.DESIGNATION
FROM EMPLOYEE_JOB E
INNER JOIN JOB J
ON J.JOB_ID=E.JOB_ID
WHERE J.DESIGNATION ='SALESPERSON';

---39.UPDATE THE EMPLOYEES SALARIES, WHO ARE WORKING AS CLERK ON THE BASIS OF 10%.
UPDATE EMPLOYEE_JOB             
 SET SALARY = SALARY+(SALARY*0.1)
 WHERE JOB_ID IN(
                SELECT JOB_ID FROM EMPLOYEE_JOB
                WHERE JOB_ID IN (
                            SELECT JOB_ID FROM JOB
                            WHERE DESIGNATION ='CLERK'));
                            
SELECT * FROM EMPLOYEE_JOB;

--- 41.	DISPLAY THE SECOND HIGHEST SALARY DRAWING EMPLOYEE DETAILS.
SELECT * FROM (                       
                SELECT E.*, DENSE_RANK() OVER(ORDER BY SALARY DESC) RANK FROM EMPLOYEE_JOB E)
WHERE RANK = 2;


---43.LIST OUT THE EMPLOYEES WHO EARN MORE THAN EVERY EMPLOYEE IN DEPARTMENT 30.
SELECT * FROM EMPLOYEE_JOB
WHERE (SALARY ) >ALL(
                    SELECT SALARY FROM EMPLOYEE_JOB
                    WHERE DEPARTMENT_ID =30);

---44.LIST OUT THE EMPLOYEES WHO EARN MORE THAN THE LOWEST SALARY IN DEPARTMENT 30.
SELECT * FROM  EMPLOYEE_JOB
WHERE SALARY >ANY(
                    SELECT MIN(SALARY) FROM EMPLOYEE_JOB
                        WHERE DEPARTMENT_ID =30);  

---45.FIND OUT WHICH DEPARTMENT DONT HAVE ANY EMPLOYEES.
SELECT * FROM DEPARTMENT
WHERE department_id NOT IN (
                             SELECT DEPARTMENT_ID FROM EMPLOYEE_JOB);
---OR
SELECT *
FROM DEPARTMENT D
LEFT OUTER JOIN EMPLOYEE_JOB E
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
WHERE EMP_ID IS NULL;

---47.FIND OUT THE EMPLOYEES WHO EARN GREATER THAN THE AVERAGE SALARY FOR THEIR DEPARTMENT.
SELECT * FROM EMPLOYEE_JOB E
WHERE SALARY >(SELECT AVG(SALARY) FROM EMPLOYEE_JOB E1 WHERE E.DEPARTMENT_ID=E1.DEPARTMENT_ID);
---OR

SELECT * FROM (              
                SELECT E.*, AVG(SALARY) OVER(PARTITION BY DEPARTMENT_ID ) AVG_SAL  FROM EMPLOYEE_JOB E)
WHERE SALARY > AVG_SAL;

---48.LIST OUR EMPLOYEES WITH THEIR DEPARTMENT NAMES.
SELECT E.EMP_ID,E.LAST_NAME,D.DEPARTMENT_ID,D.NAME
FROM DEPARTMENT D
JOIN EMPLOYEE_JOB E
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID;

---49.DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS (JOBS).
SELECT E.*,J.DESIGNATION
FROM EMPLOYEE_JOB E
JOIN JOB J
ON J.JOB_ID=E.JOB_ID;

---50.DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAME AND REGIONAL GROUPS.
SELECT E.EMP_ID,E.LAST_NAME,D.NAME,L.REGIONAL_GROUP
FROM DEPARTMENT D
JOIN EMPLOYEE_JOB E
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
JOIN LOCATION L
ON L.LOCATION_ID=D.LOCATION_ID;

---51.	HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAME.
SELECT d.name,E.COUNT FROM (              
                SELECT DEPARTMENT_ID,COUNT(*) COUNT 
                FROM EMPLOYEE_JOB 
                GROUP BY DEPARTMENT_ID) E
LEFT JOIN DEPARTMENT D
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID;

---52.HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.
SELECT d.name,E.COUNT  FROM  (                 
                SELECT DEPARTMENT_ID,COUNT(*) COUNT
                     FROM EMPLOYEE_JOB
                        GROUP BY DEPARTMENT_ID) E
JOIN DEPARTMENT D
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
WHERE NAME='SALES';

----OR
SELECT COUNT(*) FROM employee_job ej
INNER JOIN department D
ON ej.department_id=D.department_id
WHERE D.NAME = 'SALES';



---53.WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 4 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES IN ASCENDING ORDER.
SELECT D.DEPARTMENT_ID,D.NAME,COUNT FROM (
                SELECT DEPARTMENT_ID,COUNT(*) COUNT FROM EMPLOYEE_JOB
                GROUP BY DEPARTMENT_ID
                HAVING COUNT(*) =4 ) E
INNER JOIN DEPARTMENT D
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID;

---54.HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS.
SELECT J.DESIGNATION,COUNT FROM(                    
              SELECT JOB_ID,COUNT(*) COUNT  FROM EMPLOYEE_JOB
                    GROUP BY JOB_ID) E
INNER JOIN JOB J 
ON E.JOB_ID=J.JOB_ID;

---55.HOW MANY EMPLOYEES WORKING IN “DALLAS”.
SELECT L.REGIONAL_GROUP,COUNT FROM (             
                SELECT DEPARTMENT_ID,COUNT(*) COUNT
                FROM EMPLOYEE_JOB
                GROUP BY DEPARTMENT_ID) E
INNER JOIN DEPARTMENT D
ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
INNER JOIN LOCATION L
ON D.LOCATION_ID=L.LOCATION_ID
WHERE REGIONAL_GROUP = 'DALLAS';

-----------------------59.DISPLAY THE EMPLOYEE DETAILS WITH THEIR MANAGER NAMES.
SELECT E.* 
FROM EMPLOYEE_JOB E
INNER JOIN EMPLOYEE_JOB E1
ON E.EMP_ID=E1.MANAGER_ID;

UPDATE EMPLOYEE_JOB
SET MANAGER_ID = 7507
WHERE emp_id=7372;

---------------------------60.DISPLAY THE EMPLOYEE DETAILS WHO EARN MORE THAN THEIR MANAGERS SALARIES.
SELECT E.* 
FROM EMPLOYEE_JOB E
JOIN EMPLOYEE_JOB E1
ON E.EMP_ID=E1.MANAGER_ID
WHERE E.SALARY>E1.SALARY;


---62.	DISPLAY EMPLOYEE DETAILS WITH ALL DEPARTMENTS.
SELECT E.*, D.NAME
FROM EMPLOYEE_JOB E
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;


---63.DISPLAY ALL EMPLOYEES IN SALES OR OPERATION DEPARTMENTS.
SELECT E.*, D.NAME
FROM EMPLOYEE_JOB E
INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
WHERE NAME ='SALES' OR NAME='OPERATIONS';

---64.LIST OUT THE DISTINCT JOBS IN SALES AND OPERATIONS DEPARTMENTS.
SELECT DESIGNATION FROM JOB WHERE JOB_ID IN(
                SELECT DISTINCT JOB_ID FROM EMPLOYEE_JOB 
                    WHERE DEPARTMENT_ID IN (
                                             SELECT DEPARTMENT_ID FROM DEPARTMENT
                                                WHERE NAME='SALES' OR NAME='OPERATIONS'));
                                                
---OR
SELECT DESIGNATION FROM JOB WHERE JOB_ID IN (                
                    SELECT JOB_ID FROM EMPLOYEE_JOB WHERE DEPARTMENT_ID IN (
                                            SELECT DISTINCT D.DEPARTMENT_ID
                                            FROM EMPLOYEE_JOB E
                                            INNER JOIN DEPARTMENT D
                                            ON D.DEPARTMENT_ID=E.DEPARTMENT_ID
                                            WHERE D.NAME='SALES' OR D.NAME='OPERATIONS')); 


                                        
---65.LIST OUT THE ALL JOBS IN SALES AND ACCOUNTING DEPARTMENTS.
SELECT DESIGNATION FROM JOB
     WHERE job_id IN (
                        SELECT JOB_ID FROM EMPLOYEE_JOB 
                                    WHERE DEPARTMENT_ID IN(                      
                                                            SELECT DEPARTMENT_ID FROM DEPARTMENT 
                                                            WHERE NAME = 'SALES' OR  NAME = 'ACCOUNTING'));

---66.LIST OUT THE COMMON JOBS IN RESEARCH AND ACCOUNTING DEPARTMENTS IN ASCENDING ORDER.
SELECT DESIGNATION FROM JOB
     WHERE job_id IN (
                        SELECT JOB_ID FROM EMPLOYEE_JOB 
                                    WHERE DEPARTMENT_ID IN(                      
                                                            SELECT DEPARTMENT_ID FROM DEPARTMENT 
                                                            WHERE NAME = 'RESEARCH' OR  NAME = 'ACCOUNTING'));









SELECT * FROM employee_job;


